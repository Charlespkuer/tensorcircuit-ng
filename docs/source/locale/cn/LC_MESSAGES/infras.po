# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, The TensorCircuit Authors
# This file is distributed under the same license as the tensorcircuit
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
msgid ""
msgstr ""
"Project-Id-Version: tensorcircuit\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-02-23 21:05+0800\n"
"PO-Revision-Date: 2022-02-23 21:13+0800\n"
"Last-Translator: \n"
"Language-Team: \n"
"Language: cn\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"X-Generator: Poedit 3.0.1\n"

#: ../../source/infras.rst:3
msgid "TensorCircuit: What is inside?"
msgstr "TensorCircuit：里面有什么？"

#: ../../source/infras.rst:5
msgid ""
"This part of the documentation is mainly for advanced users and developers "
"who want to learn more about what happened behind the scene and delve into "
"the codebase."
msgstr ""
"这部分文档主要面向希望了解更多后端原理与并深入研究代码库的高级用户和开发人"
"员。"

#: ../../source/infras.rst:9
msgid "Overview of Modules"
msgstr "模块概述"

#: ../../source/infras.rst:11
msgid "**Core Modules:**"
msgstr "**核心模块：**"

#: ../../source/infras.rst:13
msgid ""
":py:mod:`tensorcircuit.circuit`: The core object :py:obj:`tensorcircuit."
"circuit.Circuit`. It supports circuit construction, simulation, "
"representation, and visualization without noise or with noise using the "
"Monte Carlo trajectory approach."
msgstr ""
":py:mod:`tensorcircuit.circuit`: 核心对象 :py:obj:`tensorcircuit.circuit."
"Circuit`.它支持使用蒙特卡洛轨迹方法的无噪声或有噪声的电路构建、仿真、表示和可"
"视化。"

#: ../../source/infras.rst:15
msgid ""
":py:mod:`tensorcircuit.cons`: Runtime ML backend, dtype and contractor "
"setups. We provide three sets of set methods for global setup, function "
"level setup using function decorators, and context setup using ``with`` "
"context managers. We also include customized contractor infrastructures in "
"this module."
msgstr ""
":py:mod:`tensorcircuit.cons`: 运行时的机器学习后端、数据类型和 contractor 设"
"置。 我们为全局设置、使用函数装饰器的函数级别设置和使用 ``with`` 上下文管理器"
"的上下文设置提供了三组设置方法.我们还在此模块中提供了定制的 contractor 基础设"
"施。"

#: ../../source/infras.rst:17
msgid ""
":py:mod:`tensorcircuit.gates`: Definition of quantum gates, either fixed "
"ones or parameterized ones, as well as :py:obj:`tensorcircuit.gates.GateF` "
"class for gates."
msgstr ""
":py:mod:`tensorcircuit.gates`: 固定或参数化的量子门的定义，以及用于门的 :py:"
"obj:`tensorcircuit.gates.GateF` 类。"

#: ../../source/infras.rst:19
msgid "**Backend Agnostic Abstraction:**"
msgstr "**后端无关抽象：**"

#: ../../source/infras.rst:21
msgid ""
":py:mod:`tensorcircuit.backends` provides a set of backend API and the "
"corresponding implementation on Numpy, Jax, TensorFlow, and PyTorch "
"backends. These backends are inherited from the TensorNetwork package and "
"are highly customized."
msgstr ""
":py:mod:`tensorcircuit.backends` 提供了一组后端 API 以及在 Numpy、Jax、"
"TensorFlow 和 PyTorch 后端上的对应实现。这些后端继承自 TensorNetwork 包并且是"
"高度定制的。"

#: ../../source/infras.rst:23
msgid "**Noisy Simulation Related Modules:**"
msgstr "**噪声模拟相关模块：**"

#: ../../source/infras.rst:25
msgid ":py:mod:`tensorcircuit.channels`: Definition of quantum noise channels."
msgstr ":py:mod:`tensorcircuit.channels`: 量子噪声通道的定义。"

#: ../../source/infras.rst:27
msgid ""
":py:mod:`tensorcircuit.densitymatrix`: Referenced implementation of ``tc."
"DMCircuit`` class, with similar set API of ``tc.Circuit`` while simulating "
"the noise in the full form of the density matrix."
msgstr ""
":py:mod:`tensorcircuit.densitymatrix`: Referenced implementation of ``tc."
"DMCircuit`` 类的引用实现，具有 ``tc.Circuit`` 的类似集合 API，同时以密度矩阵"
"的完整形式模拟噪声。"

#: ../../source/infras.rst:29
msgid ""
":py:mod:`tensorcircuit.densitymatrix2`: Highly efficient implementation of :"
"py:obj:`tensorcircuit.densitymatrix2.DMCircuit2` class, always preferred "
"than the referenced implementation."
msgstr ""
":py:mod:`tensorcircuit.densitymatrix2`:  :py:obj:`tensorcircuit."
"densitymatrix2.DMCircuit2` 类的高效实现，总是比引用的实现更适用。"

#: ../../source/infras.rst:31
msgid "**ML Interfaces Related Modules:**"
msgstr "**机器学习接口相关模块：**"

#: ../../source/infras.rst:33
msgid ""
":py:mod:`tensorcircuit.interfaces`: Provide interfaces when quantum "
"simulation backend is different from neural libraries. Currently include "
"PyTorch and scipy optimizer interfaces."
msgstr ""
":py:mod:`tensorcircuit.interfaces`: 当量子模拟后端与神经库不同时提供接口。 目"
"前包括 PyTorch 和 scipy 优化器接口。"

#: ../../source/infras.rst:35
msgid ""
":py:mod:`tensorcircuit.keras`: Provide TensorFlow Keras layers, as well as "
"wrappers of jitted function, save/load from tf side."
msgstr ""
":py:mod:`tensorcircuit.keras`: 提供 TensorFlow Keras 层，以及可及时编译函数的"
"包装器，从 TensorFlow 端保存/加载."

#: ../../source/infras.rst:37
msgid "**MPS and MPO Utiliy Modules:**"
msgstr "**MPS 和 MPO 实用模块：**"

#: ../../source/infras.rst:39
msgid ""
":py:mod:`tensorcircuit.quantum`: Provide definition and classes for Matrix "
"Product States as well as Matrix Product Operators, we also include various "
"quantum physics and quantum information quantities in this module."
msgstr ""
":py:mod:`tensorcircuit.quantum`: 提供矩阵乘积状态以及矩阵乘积算子的定义和类，"
"我们还在这个模块中包含了各种量子物理和量子信息量。"

#: ../../source/infras.rst:41
msgid "**MPS Based Simulator Modules:**"
msgstr "**基于 MPS 的模拟器模块：**"

#: ../../source/infras.rst:43
msgid ""
":py:mod:`tensorcircuit.mps_base`: Customized and jit/AD compatible MPS class "
"from TensorNetwork package."
msgstr ""
":py:mod:`tensorcircuit.mps_base`: 来自 TensorNetwork 包的自定义并且即时编译/"
"自动微分兼容的 MPS 类。"

#: ../../source/infras.rst:45
msgid ""
":py:mod:`tensorcircuit.mpscircuit`: :py:obj:`tensorcircuit.mpscircuit."
"MPSCircuit` class with similar (but subtly different) APIs as ``tc."
"Circuit``, where the simulation engine is based on MPS TEBD."
msgstr ""
":py:mod:`tensorcircuit.mpscircuit`: :py:obj:`tensorcircuit.mpscircuit."
"MPSCircuit` 类具有与 ``tc.Circuit``，类似（但略有不同）的 API，其中仿真引擎基"
"于 MPS TEBD。"

#: ../../source/infras.rst:47
msgid "**Supplemental Modules:**"
msgstr "**支持模块：**"

#: ../../source/infras.rst:49
msgid ""
":py:mod:`tensorcircuit.simplify`: Provide tools and utility functions to "
"simplify the tensornetworks before the real contractions."
msgstr ""
":py:mod:`tensorcircuit.simplify`: 提供工具和实用函数以在真正收缩之前简化张量"
"网络。"

#: ../../source/infras.rst:51
msgid ""
":py:mod:`tensorcircuit.experimental`: Experimental functions, long and "
"stable support is not guaranteed."
msgstr ""
":py:mod:`tensorcircuit.experimental`: 实验函数，不保证有持久且稳定的支持。"

#: ../../source/infras.rst:53
msgid ""
":py:mod:`tensorcircuit.utils`: Some general function tools that are not "
"quantum at all."
msgstr ":py:mod:`tensorcircuit.utils`: 一些与量子完全无关的通用工具函数。"

#: ../../source/infras.rst:55
msgid ":py:mod:`tensorcircuit.vis`: Visualization code for circuit drawing."
msgstr ":py:mod:`tensorcircuit.vis`: 用于电路可视化的代码"

#: ../../source/infras.rst:57
msgid "**Shortcuts and Templates for Circuit Manipulation:**"
msgstr "**电路操作的快捷方式和模板：**"

#: ../../source/infras.rst:59
msgid ""
":py:mod:`tensorcircuit.templates`: provide handy shortcuts functions for "
"expectation or circuit building patterns."
msgstr ""
":py:mod:`tensorcircuit.templates`: 为期望或电路构建模式提供方便的快捷函数。"

#: ../../source/infras.rst:61
msgid "**Applications:**"
msgstr "**应用：**"

#: ../../source/infras.rst:63
msgid ""
":py:mod:`tensorcircuit.applications`: most code here is not maintained and "
"deprecated, use at your own risk."
msgstr ""
":py:mod:`tensorcircuit.applications`: 这里的大多数代码都没有维护并且被弃用"
"了，使用风险自负。"

#: ../../source/infras.rst:67
msgid ""
"Recommend reading order -- only read the part of code you care about on your "
"purpose. If you want to get an overview of the codebase, please read ``tc."
"circuit`` followed by ``tc.cons`` and ``tc.gates``."
msgstr ""
"推荐阅读顺序——只阅读你关心的部分代码。 如果您想了解代码库的概述，请阅读 ``tc."
"circuit`` 后面的 ``tc.cons`` 和 ``tc.gates``。"

#: ../../source/infras.rst:72
msgid "Relation between TensorCircuit and TensorNetwork"
msgstr "TensorCircuit 和 TensorNetwork 之间的关系"

#: ../../source/infras.rst:74
msgid ""
"TensorCircuit has a strong connection with the `TensorNetwork package "
"<https://github.com/google/TensorNetwork>`_ released by Google. Since the "
"TensorNetwork package has poor documentation and tutorials, most of the "
"time, we need to delve into the codebase of TensorNetwork to figure out what "
"happened. In other words, to read the TensorCircuit codebase, one may have "
"to frequently refer to the TensorNetwork codebase."
msgstr ""
"TensorCircuit 与谷歌发布的 `TensorNetwork <https://github.com/google/"
"TensorNetwork>`_ 有很强的联系。由于 TensorNetwork 包的文档和教程很差，大多数"
"时候，我们需要深入研究 TensorNetwork 的代码库来弄清楚发生了什么。换句话说，要"
"阅读 TensorCircuit 代码库，可能需要经常参考 TensorNetwork 代码库。"

#: ../../source/infras.rst:76
msgid ""
"Inside TensorCircuit, we heavily utilize TensorNetwork-related APIs from the "
"TensorNetwork package and highly customized several modules from "
"TensorNetwork by inheritance and rewriting:"
msgstr ""
"在 TensorCircuit 内部，我们大量使用了 TensorNetwork 包中与 TensorNetwork 相关"
"的 API，并通过继承和重写从 TensorNetwork 中高度定制了几个模块："

#: ../../source/infras.rst:78
msgid ""
"We implement our own /backends from TensorNetwork's /backends by adding much "
"more APIs and fixing lots of bugs in TensorNetwork's implementations on "
"certain backends via monkey patching. (The upstream is inactive and not that "
"responsive anyhow.)"
msgstr ""
"我们从 TensorNetwork 的后端实现我们自己的后端，方法是添加更多 API，并通过猴子"
"补丁修复 TensorNetwork 在某些后端的实现中的许多错误。（上游是不活动的，无论如"
"何都没有那么反应灵敏）"

#: ../../source/infras.rst:80
msgid ""
"We borrow TensorNetwork's code in /quantum to our ``tc.quantum`` module, "
"since TensorNetwork has no ``__init__.py`` file to export these MPO and MPS "
"related objects. Of course, we have made substantial improvements since then."
msgstr ""
"我们将 /quantum 中的 TensorNetwork 代码借用到我们的 ``tc.quantum`` 模块中，因"
"为 TensorNetwork 没有 ``__init__.py`` 文件来导出这些 MPO 和 MPS 相关对象。当"
"然，从那时起，我们已经取得了实质性的进步。"

#: ../../source/infras.rst:82
msgid ""
"We borrow the TensorNetwork's code in /matrixproductstates as ``tc."
"mps_base`` for bug fixing and jit/AD compatibility, so that we have better "
"support for our MPS based quantum circuit simulator."
msgstr ""
"我们借用 /matrixproductstates 中 TensorNetwork 的代码作为 ``tc.mps_base`` 用"
"于错误修复和即时编译/自动微分兼容性，以便我们更好地支持基于 MPS 的量子电路模"
"拟器。"
